%{
#include <stdio.h>
#include "util.h"
#include "errormsg.h"

#define YYDEBUG 1

int yylex(void);

void yyerror(char *s)
{
	EM_error(EM_tokPos, "%s", s);
}

int yydebug = 1;

%}

%union {
	int pos;
	int ival;
	string sval;
}

%token <sval> ID STRING
%token <ival> INT

%token
	COMMA COLON SEMICOLON LPAREN RPAREN LBRACK RBRACK
	LBRACE RBRACE DOT
	PLUS MINUS TIMES DIVIDE EQ NEQ LT LE GT GE
	AND OR ASSIGN
	ARRAY IF THEN ELSE WHILE FOR TO DO LET IN END OF
	BREAK NIL
	FUNCTION VAR TYPE

%left SEMICOLON
%left TIMES DIVIDE
%nonassoc EQ NEQ LT LE GT GE
%left AND OR
%left PLUS MINUS

%start program

%%

program
	: expression

atom
	: INT
	| MINUS INT
	| NIL
	| STRING
	| LPAREN RPAREN
	| LPAREN expression_seq RPAREN
	| LPAREN expression RPAREN
	| ID LPAREN RPAREN
	| ID LPAREN argument_list RPAREN
	;

expression
	: atom
	| binop_expression
	| make_array_expression
	| let_declaration
	;

binop_expression
	: atom PLUS expression
	| atom MINUS expression
	| atom TIMES expression
	| atom DIVIDE expression
	| atom EQ expression
	| atom NEQ expression
	| atom LT expression
	| atom LE expression
	| atom GT expression
	| atom GE expression
	| atom AND expression
	| atom OR expression
	;

make_array_expression
	: ID LBRACK expression RBRACK OF expression
	;

argument_list
	: expression
	| argument_list COMMA expression
	;

expression_seq
	: expression SEMICOLON expression
	| expression_seq SEMICOLON expression
	;

let_declaration
	: LET declarations IN expression_kleenes END
	;

expression_kleenes
	: expression
	| expression_seq
	|
	;

declarations
	: declaration
	| declaration declaration
	;

declaration
	: type_declaration
	| var_declaration
	| func_declaration
	;

type_declaration
	: TYPE ID EQ type
	;

type
	: ID
	| LBRACK type_fields RBRACK
	| ARRAY OF ID
	;

type_fields
	: ID COLON ID
	| type_fields COMMA ID COLON ID
	;

var_declaration
	: VAR ID ASSIGN expression
	| VAR ID COLON ID ASSIGN expression
	;

func_declaration
	: FUNCTION ID LPAREN type_fields RPAREN EQ expression
	| FUNCTION ID LPAREN type_fields RPAREN COLON ID EQ expression
	;
