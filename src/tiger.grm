%{
#include <stdio.h>
#include "util.h"
#include "errormsg.h"

int yylex(void);

void yyerror(char *s)
{
	EM_error(EM_tokPos, "%s", s);
}
//FIXME: add valueless expressions!
%}

%union {
	int pos;
	int ival;
	string sval;
}

%token <sval> ID STRING
%token <ival> INT

%token
	COMMA COLON SEMICOLON LPAREN RPAREN LBRACK RBRACK
	LBRACE RBRACE DOT
	PLUS MINUS TIMES DIVIDE EQ NEQ LT LE GT GE
	AND OR ASSIGN
	ARRAY IF THEN ELSE WHILE FOR TO DO LET IN END OF
	BREAK NIL
	FUNCTION VAR TYPE

%left SEMICOLON
%left TIMES DIVIDE
%nonassoc EQ NEQ LT LE GT GE
%left AND OR
%left PLUS MINUS

%start program

%%

program:	exp

exp:
	LPAREN seq RPAREN
	| binop
	| lvalue
	| NIL
	| INT
	| STRING
	| ID LPAREN RPAREN
	| ID LPAREN fargs RPAREN

seq:
	exp
	| seq SEMICOLON exp

lvalue:
	ID
	| lvalue DOT ID
	| lvalue LBRACK exp RBRACK

fargs:
	exp
	| fargs COMMA exp

binop:
	exp PLUS exp
	| exp MINUS exp
	| exp TIMES exp
	| exp DIVIDE exp
	| exp EQ exp
	| exp NEQ exp
	| exp LT exp
	| exp LE exp
	| exp GT exp
	| exp GE exp
	| exp AND exp
	| exp OR exp
